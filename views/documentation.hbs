<nav class="navbar navbar-custom navbar-fixed-top" role="navigation">
	<div class="container">
		<div class="navbar-header">
			<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-main-collapse">
			</button>
			<a class="navbar-brand page-scroll" href="/">
				HIDR <span class="beta">(beta)</span>
			</a>
		</div>
	</div>
</nav>

<div class="docdiv">
	<h1>DOCUMENTATION</h1>
	<h3>#hack4humanity</h3>

	<h4>Carolynn Vu, Christina Chan, Choonie Lee, Kong Huang</h4>

	<a href="https://sites.google.com/site/hack4humanitynyc/home"><i class="fa fa-google"></i> Google Hack4Humanity 2014</a><br /><br />

	<h3>Track#1 Ending online repression and censorship</h3>

	<p>Definition: Explore how technology can enable people to confront threats in the face of conflict, instability and repression.</p>

	<p>Example: Checkpoints in Syria: having the wrong data on your phone can put your life at risk.</p>

	<h3>Hidr</h3>

	<p>As a journalist who deals with sensitive content files, I want to protect my sources and store my files in a way that would escape the notice of investigators.</p>

	<p>This hack is an application composed of 2 portions, 1 encoder and 1 decoder. </p>

	<p>The user provides two files: a benign base file, and a second file to be encoded and hidden in the base file (such as a transcript containing sensitive content). The user also enters a password that they will need for decoding the file.</p>

	<p>First the user puts the two files into the application and gives a password, the backend encoder encrypts the sensitive file and embeds it into the base file. This new file is sent back to the user.</p>

	<p>When the user opens the file without the decoder, the base file will be displayed.</p>

	<p>When the user wants to decrypt the file, they put the encoded file and password into the application, which will give the sensitive file within the benign file.</p>
</div>